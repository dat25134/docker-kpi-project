version: '3.8'

services:
  nginx:
    image: nginx:latest
    container_name: kpi_nginx
    ports:
      - "90:90"
      - "8198:8198"
      - "6001:6001"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      fe:
        condition: service_started
      be:
        condition: service_healthy
      echo:
        condition: service_healthy

  mysql:
    image: mysql:8.0
    container_name: kpi_mysql
    restart: always
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: kpi
      MYSQL_USER: kpi_mysql
      MYSQL_PASSWORD: secret
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/init:/docker-entrypoint-initdb.d

  fe:
    build:
      context: .
      dockerfile: Dockerfile.fe
    container_name: kpi_fe
    env_file:
      - ./env/fe.env

  be:
    build:
      context: .
      dockerfile: Dockerfile.be
    container_name: kpi_be
    volumes:
      - ./env/laravel-echo-server.json:/app/laravel-echo-server.json
      - ./kpi_be:/var/www/html
      - ./env/be.env:/var/www/html/.env
    depends_on:
      - mysql
      - redis
    command: sh -c "composer install && php -S 0.0.0.0:90 -t public"
    healthcheck:
      test: ["CMD", "php", "artisan", "--version"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  queue:
    build:
      context: .
      dockerfile: Dockerfile.be
    container_name: kpi_queue
    volumes:
      - ./env/be.env:/var/www/html/.env
      - ./kpi_be:/var/www/html
    command: php artisan queue:work
    depends_on:
      be:
        condition: service_healthy
      redis:
        condition: service_started

  echo:
    build:
      context: .
      dockerfile: Dockerfile.be
    container_name: kpi_echo
    command: npx laravel-echo-server start
    volumes:
      - ./env/laravel-echo-server.json:/var/www/html/laravel-echo-server.json
    depends_on:
      be:
        condition: service_healthy
      redis:
        condition: service_started
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6001"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  redis:
    image: redis:alpine
    container_name: kpi_redis
    ports:
      - "6379:6379"

  cron:
    build:
      context: .
      dockerfile: Dockerfile.be
    container_name: kpi_cron
    env_file:
      - ./env/be.env
    volumes:
      - ./cron/crontab:/etc/cron.d/crontab
    command: sh -c "chmod +x /etc/cron.d/crontab && crontab /etc/cron.d/crontab && touch /var/log/cron.log && cron && tail -f /var/log/cron.log"
    depends_on:
      - be

volumes:
  mysql_data:
